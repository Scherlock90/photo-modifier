{"version":3,"sources":["serviceWorker.js","ImageComponents/ImageEditor.tsx","AppTsx.tsx","index.js","logo.svg","Image/sen.jpg"],"names":["Boolean","window","location","hostname","match","ImageSlider","_ref","value","max","onChange","children","react_default","a","createElement","Fragment","Typography_default","id","Slider_default","min","step","ImageEditor","_useState","useState","_useState2","Object","slicedToArray","contrast","setContrast","_useState3","_useState4","brightness","setBrightness","_useState5","_useState6","invert","setInvert","_useState7","_useState8","saturate","setSaturate","_useState9","_useState10","sepia","setSepia","_useState11","_useState12","grayscale","setGrayscale","_useState13","_useState14","rotation","setRotation","_useState15","_useState16","width","setWidth","_useState17","_useState18","height","setHeight","_useState19","_useState20","allPix","setAllPix","_useState21","_useState22","color","setColor","_useState23","_useState24","name","setName","_useState25","defaultImage","_useState26","image","setImage","onBoundsElement","e","bounds","document","querySelector","getBoundingClientRect","parseInt","toFixed","imgStyle","transform","concat","filter","container","borderRadius","display","gridTemplateColumns","gridTemplateRows","gridGap","padding","backgroundColor","buttonStyle","cursor","parametersStyle","marginBlockEnd","marginBlockStart","colorStyle","headerTitle","fontSize","style","src","logo","className","alt","ImageEditor_ImageSlider","onClick","type","URL","createObjectURL","target","files","maxHeight","AppTsx","ReactDOM","render","BrowserRouter","src_AppTsx","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.8cbfc5bc.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React, { useState, SFC } from 'react';\r\nimport './imageEditor.css';\r\nimport logo from '../logo.svg';\r\nimport defaultImage from '../Image/sen.jpg';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/lab/Slider\";\r\n\r\ninterface Props {\r\n\tvalue:number;\r\n\tmax:number;\r\n\tonChange(e: any, value: number): void;\r\n}\r\n\r\nconst ImageSlider: SFC<Props> = ({ value, max, onChange, children }) => (\r\n    <>\r\n      <Typography id=\"label\">\r\n        {children}\r\n      </Typography>\r\n      <Slider\r\n        min={0}\r\n        max={max}\r\n        value={value}\r\n        step={1}\r\n        onChange={onChange}\r\n      />\r\n    </>\r\n)\r\n\r\nexport default function ImageEditor () {\r\n  const [contrast, setContrast] = useState(1);\r\n  const [brightness, setBrightness] = useState(1);\r\n  const [invert, setInvert] = useState(0);\r\n  const [saturate, setSaturate] = useState(1);\r\n  const [sepia, setSepia] = useState(0);\r\n  const [grayscale, setGrayscale] = useState(0);\r\n  const [rotation, setRotation] = useState(0);\r\n  const [width, setWidth] = useState(0);\r\n  const [height, setHeight] = useState(0);\r\n  const [allPix, setAllPix] = useState(0);\r\n  const [color, setColor] = useState('#1de9b6');\r\n  const [name, setName] = useState('Franek!');\r\n  const [image, setImage] = useState(defaultImage);\r\n  let deg = 'deg'; \r\n  let percent = '%'; \r\n\r\n  function onBrightness (e: any, brightness: number) { \r\n    setBrightness(brightness);\r\n    return brightness\r\n  }\r\n  function onGrayscale (e: any, grayscale: number) {    \r\n    setGrayscale(grayscale);\r\n    return grayscale\r\n  }\r\n  function onContrast (e: any, contrast: number) {    \r\n    setContrast(contrast);\r\n    return contrast\r\n  }\r\n  function onInvert (e: any, invert: number) {    \r\n    setInvert(invert);\r\n    return invert\r\n  }\r\n  function onSaturate (e: any, saturate: number) {    \r\n    setSaturate(saturate);\r\n    return saturate\r\n  }\r\n  function onSepia (e: any, sepia: number) {    \r\n    setSepia(sepia);\r\n    return sepia\r\n  }\r\n  function onRotation (e: any, rotation: number) {  \r\n    setRotation(rotation);\r\n    if(rotation >= 1){\r\n      onBoundsElement(setAllPix);\r\n    }   \r\n    return rotation\r\n  }\r\n  function onBoundsElement(e: any): { width: number; height: number; allPix: number } {\r\n      let guitarBounds = document.querySelector('.imgStyle');\r\n      let bounds = guitarBounds.getBoundingClientRect();\r\n      setWidth(parseInt(bounds.width.toFixed(0)));\r\n      setHeight(parseInt(bounds.height.toFixed(0)));\r\n      setAllPix(parseInt(bounds.width.toFixed(0)) * parseInt(bounds.height.toFixed(0)));\r\n      return {width, height, allPix}\r\n  }\r\n  function fileHandler (e: any) {\r\n    setImage(URL.createObjectURL(e.target.files[0])\r\n    )\r\n  }\r\n  const imgStyle = {\r\n    transform: `rotate(${rotation}deg)`,\r\n    filter: `sepia(${sepia}) grayscale(${grayscale}) saturate(${saturate}) invert(${invert}) contrast(${contrast}) brightness(${brightness})`,\r\n  }\r\n  const container = {\r\n    color: color,\r\n    borderRadius: '5%',\r\n    display: 'grid',\r\n    gridTemplateColumns: 'auto auto auto',\r\n    gridTemplateRows: '80px 200px',\r\n    gridGap: '200px',\r\n    padding: '10px',\r\n    height: '600px',\r\n    backgroundColor: 'rgba(28,34,47,.5)'\r\n  }\r\n  const buttonStyle = {\r\n    cursor: 'pointer'\r\n  }\r\n  const valueStyle = {\r\n    width: '232px',\r\n    maxHeight: '1000px',\r\n    height: '300px',\r\n    borderRadius: '5%'\r\n  }\r\n  const parametersStyle = {\r\n    height: '50px',\r\n    width: '200px',\r\n    marginBlockEnd: '0',\r\n    marginBlockStart: '0',\r\n    padding: '1em',\r\n    color: color,\r\n  }\r\n  const colorStyle = {\r\n    color: color,\r\n  }\r\n  const headerTitle = {\r\n    color: color,\r\n    fontSize: '40px',\r\n    padding: '1em 0 0 0'\r\n  }\r\n  const containerImage = {\r\n    padding: '3.5em 0 3.5em 0'\r\n  }\r\n  return (\r\n      <div>\r\n        <div style={headerTitle}>\r\n          React Photo-Modifier <br/> with Hooks\r\n        </div>  \r\n        <div>\r\n          <span>\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          </span>   \r\n        </div> \r\n      <div style={container}>\r\n        <div className=\"settings\">\r\n          <ImageSlider\r\n              max={100}\r\n              value={brightness}\r\n              onChange={onBrightness}\r\n          >\r\n            <span style={colorStyle}>\r\n              Brightness {brightness} {percent}\r\n            </span>\r\n          </ImageSlider>\r\n          <ImageSlider\r\n              max={100}\r\n              value={contrast}\r\n              onChange={onContrast}\r\n          >\r\n            <span style={colorStyle}>\r\n              Contrast {contrast} {percent}\r\n            </span>\r\n          </ImageSlider>\r\n          <ImageSlider\r\n              max={100}\r\n              value={grayscale}\r\n              onChange={onGrayscale}\r\n          >\r\n            <span style={colorStyle}>\r\n              Grayscale {grayscale} {percent}\r\n            </span>\r\n          </ImageSlider>\r\n          <ImageSlider\r\n              max={100}\r\n              value={saturate}\r\n              onChange={onSaturate}\r\n          >\r\n            <span style={colorStyle}>\r\n              Saturate {saturate} {percent}\r\n            </span>\r\n          </ImageSlider>          \r\n          <ImageSlider\r\n              max={100}\r\n              value={sepia}\r\n              onChange={onSepia}\r\n          >\r\n            <span style={colorStyle}>\r\n              Sepia {sepia} {percent}\r\n            </span>\r\n          </ImageSlider>\r\n          <ImageSlider\r\n              max={100}\r\n              value={invert}\r\n              onChange={onInvert}\r\n          >\r\n            <span style={colorStyle}>\r\n              Invert {invert} {percent}\r\n            </span>\r\n          </ImageSlider>\r\n          <ImageSlider\r\n              max={360}\r\n              value={rotation}\r\n              onChange={onRotation}\r\n          >\r\n            <span style={colorStyle}>\r\n              Rotation {rotation} {deg}\r\n            </span>\r\n          </ImageSlider>\r\n          <div className=\"buttonContainer\">\r\n            <div className=\"buttonOnSettings\">\r\n              <button style={buttonStyle} onClick={() => setName('Lucek')}>Change name</button>\r\n            </div>\r\n            <div className=\"buttonOnSettings\">\r\n              <button style={buttonStyle} onClick={() => setColor('#00e5ff') }>Change color</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <div style={containerImage}>\r\n            <img src={image} style={imgStyle} className=\"imgStyle\" onClick={onBoundsElement} />\r\n          </div>          \r\n          <p className=\"colorStyle\" style={colorStyle} > {name}</p>\r\n          <div className=\"buttonImage\">\r\n            <input type=\"file\" id=\"image\" onChange={fileHandler} />\r\n          </div>\r\n        </div>\r\n        <div style={valueStyle}>\r\n          <p style={parametersStyle}>Width: {width} px</p>\r\n          <p style={parametersStyle}>Height: {height} px</p>\r\n          <p style={parametersStyle}>Size: {allPix} px</p>\r\n          <div className=\"buttonImage\">\r\n            <button onClick={onBoundsElement} className=\"cursorPointer\" type=\"button\"  >Value of Height/Width/Size\"</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )  \r\n}","import React from 'react';\r\nimport ImageEditor from './ImageComponents/ImageEditor';\r\nimport './App.css';\r\n\r\n\r\nconst AppTsx: React.SFC = () => {\r\n    return (\r\n        <div className=\"App\">\r\n            <div>\r\n                <ImageEditor />\r\n            </div>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default AppTsx;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport AppTsx from './AppTsx';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter> \r\n        <AppTsx />        \r\n    </BrowserRouter>, document.getElementById('root'));\r\nserviceWorker.unregister();","module.exports = __webpack_public_path__ + \"static/media/logo.0305800a.svg\";","module.exports = __webpack_public_path__ + \"static/media/sen.c2312b66.jpg\";"],"sourceRoot":""}