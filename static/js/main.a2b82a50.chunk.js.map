{"version":3,"sources":["logo.svg","ImageComponents/ImageEditor.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","ImageEditor","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","name","target","id","value","props","data","settings","forceUpdate","react_default","a","createElement","className","ImageEditor_Settings","url","image","onChange","React","Component","Settings","_this2","setVal","bind","assertThisInitialized","setting","type","step","min","max","defaultValue","onchange","map","index","prototype","ImageEditor_Image","Image","_this3","_onMouseMove","setState","x","nativeEvent","offsetX","y","offsetY","onBoundsElement","bounds","document","querySelector","getBoundingClientRect","console","log","width","height","AllPix","onImgLoad","_ref","img","rotate","newRotation","state","rotation","rotateleft","fileHandler","event","preventDefault","imageField","URL","createObjectURL","files","_this$state","newRot","newSett","imgStyle","transform","concat","filter","imgStyle3","padding","maxWidth","maxHeight","style","display","alignItems","justifyContent","action","method","encType","onSubmit","handleSumbit","color","fontSize","src","logo","alt","onClick","onMouseMove","onLoad","lineHeight","textAlign","defaultProps","App","ImageEditor_ImageEditor","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a2b82a50.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","import React from 'react';\r\nimport logo from '../logo.svg'\r\n\r\nconst data = {\r\n    settings:[\r\n      {\r\n          name: 'contrast',\r\n          value: '100%',\r\n      },\r\n      {\r\n          name: 'hue',\r\n          value: '0deg'\r\n      },\r\n      {\r\n          name: 'brightness',\r\n          value: '100%'\r\n      },\r\n      {\r\n          name: 'saturate',\r\n          value: '100%'\r\n      },\r\n      {\r\n          name: 'sepia',\r\n          value: '0%'\r\n      },\r\n      {\r\n          name:'invert',\r\n          value:'0%'\r\n      },\r\n      {\r\n        name: 'rotation',\r\n        value: '0'\r\n      }\r\n    ]\r\n  }\r\n  \r\n  export default class ImageEditor extends React.Component{\r\n    constructor(){\r\n      super();\r\n    }\r\n    \r\n    handleChange = (e) =>{\r\n      let name = e.target.id;\r\n      let value = e.target.value;\r\n      switch (name) {\r\n              case 'contrast':\r\n                  this.props.data.settings[0].value = value + '%';\r\n                  break;\r\n              case 'hue':\r\n                  this.props.data.settings[1].value = value + 'deg';\r\n                  break;\r\n              case 'brightness':\r\n                  this.props.data.settings[2].value = value + '%';\r\n                  break;\r\n              case 'saturate':\r\n                  this.props.data.settings[3].value = value + '%';\r\n                  break;\r\n              case 'sepia':\r\n                  this.props.data.settings[4].value = value + '%';\r\n                  break;\r\n              case 'invert':\r\n                  this.props.data.settings[5].value = value + '%';\r\n                  break;\r\n              case 'rotation':\r\n                  this.props.data.settings[6].value = value;\r\n                  break;\r\n          }\r\n          this.forceUpdate();\r\n    }\r\n    \r\n    render(){\r\n      return(\r\n        <div className=\"settings\">\r\n          <Settings settings={this.props.data.settings} url={this.props.data.image} onChange={this.handleChange}/> \r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  class Settings extends React.Component{\r\n    constructor(props){\r\n      super(props);\r\n      this.setVal = this.setVal.bind(this);\r\n    }\r\n    setVal(setting,onChange){\r\n      switch(setting.name){\r\n        case 'contrast': return (<input type=\"range\" step=\"1\" min=\"0\" max=\"200\" id={setting.name} onChange={onChange} defaultValue={setting.value}  />)\r\n          break;\r\n        case 'hue': return (<input type=\"range\" step=\"1\" min=\"0\" max=\"360\" id={setting.name} onChange={onChange} defaultValue={setting.value}  />)\r\n          break;\r\n        case 'brightness': return (<input type=\"range\" step=\"1\" min=\"0\" max=\"200\" id={setting.name} onChange={onChange} defaultValue={setting.value}  />)\r\n          break;\r\n        case 'saturate': return (<input type=\"range\" step=\"1\" min=\"0\" max=\"100\" id={setting.name} onChange={onChange} defaultValue={setting.value}  />)\r\n          break;\r\n        case 'sepia': return (<input type=\"range\" step=\"1\" min=\"0\" max=\"100\" id={setting.name} onChange={onChange} defaultValue={setting.value}  />)\r\n          break;\r\n        case 'invert': return (<input type=\"range\" step=\"1\" min=\"0\" max=\"100\" id={setting.name} onChange={onChange} defaultValue={setting.value}  />)\r\n          break;\r\n        case 'grayscale': return (<input type=\"range\" step=\"1\" min=\"0\" max=\"100\" id={setting.name} onChange={onChange} defaultValue={setting.value}  />)\r\n          break;\r\n        case 'rotation': return (<input type=\"range\" step=\"1\" min=\"0\" max=\"360\" id={setting.name} onChange={onChange} defaultValue={setting.value}  /> )\r\n          break;\r\n        default: return (<input type=\"range\"/>)\r\n      } \r\n    }\r\n    render(){\r\n       const onchange = this.props.onChange;\r\n      return(\r\n        <div className=\"contentWrap\">\r\n          <div className=\"sidebar\">\r\n            <div className=\"title\">Filters</div>\r\n              {this.props.settings.map(function(setting,index){      \r\n                return( \r\n                  <div className=\"setting\">\r\n                    <label className=\"filterName\">\r\n                      <div>{setting.name}</div>\r\n                      <div>{setting.value}</div>\r\n                    </ label>\r\n                    {Settings.prototype.setVal(setting,onchange)}\r\n                  </div>\r\n                )\r\n              })}\r\n        </div>\r\n        <Image url={this.props.url} settings={this.props.settings} />\r\n      </div>\r\n        )\r\n    }\r\n  }\r\n  \r\n  class Image extends React.Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        imageField: '',\r\n        rotation: 0,\r\n        width: 0,\r\n        height: 0,\r\n         x: 0,\r\n         y: 0,\r\n        AllPix: 0\r\n      }\r\n    }\r\n    _onMouseMove = (e) => {\r\n    this.setState({ x: e.nativeEvent.offsetX, y: e.nativeEvent.offsetY });\r\n  }\r\n  onBoundsElement = (e) => {\r\n      let guitarBounds = document.querySelector('.guitar');\r\n      let bounds = guitarBounds.getBoundingClientRect();\r\n      console.log( bounds.width + ' width' + ' i ' + bounds.height + ' height.');\r\n      this.setState({\r\n        width: bounds.width,\r\n        height: bounds.height,\r\n        AllPix: bounds.width * bounds.height\r\n      })    \r\n  }\r\n    onImgLoad = ({ target: img }) => {\r\n    this.setState({\r\n      width: img.width,\r\n      height: img.height\r\n    });\r\n  };\r\n    componentDidMount () {\r\n      if (this.props.settings[6].value > 0) {\r\n            this.onBoundsElement();\r\n          }\r\n        this.setState({\r\n         width: this.state.width,\r\n         height: this.state.height\r\n      });\r\n    }  \r\n    rotate = (e) => {\r\n      let newRotation = this.state.rotation + 60;\r\n      this.onBoundsElement();\r\n      if(newRotation >= 360){\r\n        newRotation = 360;\r\n      }\r\n      this.setState({\r\n        rotation: newRotation\r\n      })\r\n    }\r\n    rotateleft = (e) => {\r\n      let newRotation = this.state.rotation - 60; \r\n      this.onBoundsElement();     \r\n      if(newRotation <= -360){\r\n        newRotation = -360;\r\n      }\r\n      this.setState({\r\n        rotation: newRotation,\r\n      })\r\n    }\r\n    \r\n//image Upload elements\r\n  fileHandler = (event) => {\r\n      event.preventDefault();\r\n      this.setState({imageField: URL.createObjectURL(event.target.files[0])\r\n      })\r\n    }\r\n    render(){\r\n      let { rotation, width, height, x, y, AllPix } =  this.state;\r\n      let newRot = rotation;\r\n      let newSett = this.props.settings[6].value;\r\n      newSett = newRot;\r\n      const imgStyle = {\r\n        transform: `rotate(${this.props.settings[6].value}deg) rotate(${rotation}deg)`,\r\n        filter: ` contrast(${this.props.settings[0].value}) hue-rotate(${this.props.settings[1].value}) brightness(${this.props.settings[2].value}) saturate(${this.props.settings[3].value}) sepia(${this.props.settings[4].value})\r\n        invert(${this.props.settings[5].value})`\r\n      }\r\n      if ( newRot > 0) {\r\n        console.log('value' + newSett + ' ' + newRot);\r\n        console.log(newRot = newSett);\r\n        newSett = newRot;         \r\n      }\r\n      else if (newSett == 360) {\r\n        return 360\r\n      }\r\n\r\n      const imgStyle2 = {\r\n        maxWidth: '30%',\r\n        maxHeight: '90%',\r\n        padding: '1em',\r\n        lineHeight: '1.5em',\r\n        color: 'white',\r\n        textAlign: 'left'\r\n      }\r\n      const imgStyle3 = {\r\n        padding: '3em',\r\n        maxWidth: '85%',\r\n        maxHeight: '90%'\r\n      }\r\n      const imageContainerUpload = {\r\n          width: 'auto',\r\n          height: '800px',\r\n          display: 'flex',\r\n          alignItems: 'center',\r\n          justifyContent: 'center'\r\n      }\r\n      const calcStyle = {\r\n          textAlign: 'left'\r\n      }\r\n      const styleTitle = {\r\n          color: 'white',\r\n          fontSize: '40px'\r\n      }\r\n      return(\r\n        <div className=\"imageContainer\">\r\n          <form style={imageContainerUpload} action=\"/upload\" method=\"POST\" encType=\"multipart/form-data\" onSubmit={this.handleSumbit}>\r\n            <div className='containerGuitar' style={imgStyle3}>\r\n            <div>\r\n          <p style={styleTitle}> React Photo-Modifier</p>\r\n            <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n          </div>\r\n              <div style={imgStyle3}>\r\n                <img id=\"ing\" \r\n                    src={this.state.imageField}\r\n                    className=\"guitar\" \r\n                    style={imgStyle}\r\n                    onClick={this.onBoundsElement}\r\n                    onMouseMove={this._onMouseMove}\r\n                    onLoad={this.onImgLoad} \r\n                />\r\n              </div>\r\n            </div>\r\n            <div style={imgStyle2}>\r\n              <input type=\"file\" id=\"imageField\" onChange={this.fileHandler} />\r\n              <div>\r\n                <input onClick={this.rotate} type=\"button\" value=\"Prawo\" />\r\n                <input onClick={this.rotateleft} type=\"button\" value=\"Lewo\" />\r\n              </div>\r\n              <input onClick={this.onBoundsElement} type=\"button\" value=\"Value of Height/Width/Px\" />\r\n              <div style={calcStyle}>\r\n                <p>Width: {width} </p>\r\n                <p>Height: {height} </p>\r\n                <p> Px: {AllPix} </p>\r\n                <p>Width inside img: { x }</p>\r\n                <p>Height inside img: { y }</p>\r\n              </div>              \r\n            </div>                  \r\n          </form>\r\n        </div>\r\n      )\r\n    }\r\n  }\r\n  \r\n  ImageEditor.defaultProps = {\r\n    data : data\r\n  }","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport ImageEditor from './ImageComponents/ImageEditor';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    const styleTitle = {\r\n      fontSize: '42px',\r\n    }\r\n    const containerImage = {\r\n      backgroundColor: '#282c34',\r\n      color: 'white',\r\n      minHeight: '100vh'\r\n    }\r\n    const sizeImage = {\r\n      height: '130px',\r\n      width: '130px'\r\n    }\r\n    return (\r\n      <div className=\"App\">\r\n        <div>\r\n            <ImageEditor />\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter> \r\n        <App /> \r\n    </BrowserRouter>, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}