{"version":3,"sources":["ImageComponents/Hooks.js","App.js","serviceWorker.js","index.js","logo.svg","Image/sen.jpg"],"names":["ImageSlider","_ref","value","max","onChange","children","react_default","a","createElement","Fragment","Typography_default","id","Slider_default","className","min","aria-labelledby","step","Hooks","_useState","useState","_useState2","Object","slicedToArray","contrast","setContrast","_useState3","_useState4","brightness","setBrightness","_useState5","_useState6","invert","setInvert","_useState7","_useState8","saturate","setSaturate","_useState9","_useState10","sepia","setSepia","_useState11","_useState12","grayscale","setGrayscale","_useState13","_useState14","rotation","setRotation","_useState15","_useState16","width","setWidth","_useState17","_useState18","height","setHeight","_useState19","_useState20","allPix","setAllPix","_useState21","_useState22","color","setColor","_useState23","_useState24","name","setName","_useState25","defaultImage","_useState26","image","setImage","buttonStyle","cursor","parametersStyle","marginBlockEnd","marginBlockStart","backgroundColor","padding","imgStyle","transform","concat","filter","nameStyle","style","fontSize","display","gridTemplateColumns","gridTemplateRows","gridGap","e","onClick","maxWidth","maxHeight","action","method","encType","onSubmit","src","logo","alt","bounds","document","querySelector","getBoundingClientRect","console","log","toFixed","type","URL","createObjectURL","target","files","App","Hooks_Hooks","Boolean","window","location","hostname","match","ReactDOM","render","BrowserRouter","src_App","getElementById","navigator","serviceWorker","ready","then","registration","unregister","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.9906c67f.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport logo from '../logo.svg';\r\nimport defaultImage from '../Image/sen.jpg';\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Slider from \"@material-ui/lab/Slider\";\r\nimport './Hooks.css';\r\n\r\nfunction ImageSlider ({ value, max, onChange, children }) {\r\n  return (\r\n    <>\r\n      <Typography id=\"label\">\r\n        {children}\r\n      </Typography>\r\n      <Slider className=\"slider\"\r\n        min={0}\r\n        max={max}\r\n        value={value}\r\n        aria-labelledby=\"label\"\r\n        step={1}\r\n        onChange={onChange}\r\n      />\r\n    </>\r\n   )\r\n}\r\n\r\n\r\nexport default function Hooks () {\r\n  const [contrast, setContrast] = useState('100%');\r\n  const [brightness, setBrightness] = useState('100%');\r\n  const [invert, setInvert] = useState(\"0%\");\r\n  const [saturate, setSaturate] = useState(\"100%\");\r\n  const [sepia, setSepia] = useState(\"0%\");\r\n  const [grayscale, setGrayscale] = useState('0%');\r\n  const [rotation, setRotation] = useState(\"0deg\");\r\n  const [width, setWidth] = useState('0');\r\n  const [height, setHeight] = useState('0');\r\n  const [allPix, setAllPix] = useState('0');\r\n  const [color, setColor] = useState('black');\r\n  const [name, setName] = useState('Franek!');\r\n  const [image, setImage] = useState(defaultImage);\r\n\r\n  function onBrightness (e, brightness) {    \r\n    setBrightness(brightness);\r\n  }\r\n  function onGrayscale (e, grayscale) {    \r\n    setGrayscale(grayscale);\r\n  }\r\n  function onContrast (e, contrast) {    \r\n    setContrast(contrast);\r\n  }\r\n  function onInvert (e, invert) {    \r\n    setInvert(invert);\r\n  }\r\n  function onSaturate (e, saturate) {    \r\n    setSaturate(saturate);\r\n  }\r\n  function onSepia (e, sepia) {    \r\n    setSepia(sepia);\r\n  }\r\n  function onRotation (e, rotation) {    \r\n    setRotation(rotation);\r\n  }\r\n  function onBoundsElement (e) {\r\n      let guitarBounds = document.querySelector('.imgStyle');\r\n      let bounds = guitarBounds.getBoundingClientRect();\r\n      console.log( bounds.width + ' width' + ' i ' + bounds.height + ' height.');\r\n      setWidth(bounds.width.toFixed(0));\r\n      setHeight(bounds.height.toFixed(0));\r\n      setAllPix(bounds.width.toFixed(0) * bounds.height.toFixed(0));  \r\n  }\r\n  function fileHandler (e) {\r\n    setImage(URL.createObjectURL(e.target.files[0])\r\n    )\r\n  }\r\n  const container = {\r\n    display: 'grid',\r\n    gridTemplateColumns: 'auto auto auto',\r\n    gridTemplateRows: '80px 200px',\r\n    gridGap: '200px',\r\n    padding: '10px',\r\n    height: '600px',\r\n    backgroundColor: 'rgba(28,34,47,.5)'\r\n  }\r\n  const buttonStyle = {\r\n    cursor: 'pointer'\r\n  }\r\n  const valueStyle = {\r\n    width: '230px',\r\n    maxHeight: '1000px',\r\n  }\r\n  const parametersStyle = {\r\n    height: '50px',\r\n    width: '200px',\r\n    marginBlockEnd: '0',\r\n    marginBlockStart: '0',\r\n    backgroundColor: '#ffd600',\r\n    padding: '1em'\r\n  }\r\n  const imgStyle = {\r\n    transform: `rotate(${rotation}deg)`,\r\n    filter: `sepia(${sepia}) grayscale(${grayscale}) saturate(${saturate}) invert(${invert}) contrast(${contrast}) brightness(${brightness})`,\r\n  }\r\n  const nameStyle = {\r\n    color: color\r\n  }\r\n  const elementChangingStyle = {\r\n    maxWidth: '600px',\r\n    maxHeight: '600px'\r\n  }\r\n  const headerTitle = {\r\n    color: '#ffd600',\r\n    fontSize: '40px',\r\n    padding: '1em'\r\n  }\r\n  return (\r\n    <div>\r\n        <div style={headerTitle}>\r\n          React Photo-Modifier <br/> with Hooks\r\n        </div>  \r\n      <div style={container}>\r\n        <div className=\"settings\">\r\n          <ImageSlider\r\n              max={100}\r\n              value={brightness}\r\n              onChange={onBrightness}\r\n          >\r\n              Brightness {brightness}\r\n          </ImageSlider>\r\n          <ImageSlider\r\n              max={100}\r\n              value={contrast}\r\n              onChange={onContrast}\r\n          >\r\n              Contrast {contrast}\r\n          </ImageSlider>\r\n          <ImageSlider\r\n              max={100}\r\n              value={grayscale}\r\n              onChange={onGrayscale}\r\n          >\r\n              Grayscale {grayscale}\r\n          </ImageSlider>\r\n          <ImageSlider\r\n              max={100}\r\n              value={saturate}\r\n              onChange={onSaturate}\r\n          >\r\n              Saturate {saturate}\r\n          </ImageSlider>          \r\n          <ImageSlider\r\n              max={100}\r\n              value={sepia}\r\n              onChange={onSepia}\r\n          >\r\n              Sepia {sepia}\r\n          </ImageSlider>\r\n          <ImageSlider\r\n              max={100}\r\n              value={invert}\r\n              onChange={onInvert}\r\n          >\r\n              Invert {invert}\r\n          </ImageSlider>\r\n          <ImageSlider style={buttonStyle}\r\n              max={360}\r\n              value={rotation}\r\n              onChange={onRotation}\r\n          >\r\n              Rotation {rotation}\r\n          </ImageSlider>\r\n          <div className=\"buttonContainer\">\r\n            <div className=\"buttonOnSettings\">\r\n              <button style={buttonStyle} onClick={() => setName('Lucek')}>Change name</button>\r\n            </div>\r\n            <div className=\"buttonOnSettings\">\r\n              <button style={buttonStyle} onClick={() => setColor('red') }>Change color</button>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div style={elementChangingStyle}>\r\n          <form action=\"/upload\" method=\"POST\" encType=\"multipart/form-data\" onSubmit={''}>\r\n            <div>\r\n              <span>\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n              </span>   \r\n            </div>  \r\n          </form> \r\n          <img style={imgStyle} src={image}  className=\"imgStyle\"  onClick={onBoundsElement} />\r\n          <div>\r\n            <input type=\"file\" id=\"image\" onChange={fileHandler} />\r\n          </div>\r\n          <p className=\"nameStyle\" style={nameStyle} > {name}</p>\r\n        </div>\r\n        <div style={valueStyle}>\r\n          <p style={parametersStyle}>Width: {width} px</p>\r\n          <p style={parametersStyle}>Height: {height} px</p>\r\n          <p style={parametersStyle}>Size: {allPix} px</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  )  \r\n}","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Hooks from './ImageComponents/Hooks';\r\n\r\n\r\nfunction App () {\r\n  return (\r\n    <div className=\"App\">\r\n        <div>\r\n          <Hooks />\r\n        </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter> \r\n        <App /> \r\n    </BrowserRouter>, document.getElementById('root'));\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.0305800a.svg\";","module.exports = __webpack_public_path__ + \"static/media/sen.c2312b66.jpg\";"],"sourceRoot":""}